{"version":3,"sources":["webpack:///path---user-stories-14528bc3a460d21f7471.js","webpack:///./.cache/json/user-stories.json"],"names":["webpackJsonp","./node_modules/json-loader/index.js!./.cache/json/user-stories.json","module","exports","data","site","siteMetadata","title","description","siteUrl","markdownRemark","html","excerpt","frontmatter","date","path","tags","draft","pathContext","prev","id","timeToRead","next"],"mappings":"AAAAA,cAAc,iBAERC,sEACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,MAAQC,cAAgBC,MAAA,wBAAAC,YAAA,2LAAAC,QAAA,+BAAiRC,gBAAmBC,KAAA,yyBAAAC,QAAA,8IAAAC,aAAw9BC,KAAA,mBAAAC,KAAA,iBAAAC,KAAA,KAAAT,MAAA,kCAAAU,MAAA,QAAuHC,aAAgBC,MAAQP,QAAA,2PAAAD,KAAA,kjEAAslES,GAAA,iIAAAC,WAAA,EAAAR,aAA0bC,KAAA,2BAAAC,KAAA,8BAAAC,KAAA,gBAAAT,MAAA,4BAAAU,MAAA,OAAgJK,MAASV,QAAA,2PAAAD,KAAA,23DAAAS,GAAA,sHAAAC,WAAA,EAAAR,aAA8yEC,KAAA,2BAAAC,KAAA,0BAAAC,KAAA,KAAAT,MAAA,iBAAAU,OAAA","file":"path---user-stories-14528bc3a460d21f7471.js","sourcesContent":["webpackJsonp([103852512379744],{\n\n/***/ \"./node_modules/json-loader/index.js!./.cache/json/user-stories.json\":\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"site\":{\"siteMetadata\":{\"title\":\"Kostas Bariotis' Blog\",\"description\":\"I'm Kostas Bariotis, a web developer, a proud wanderer and a passionate doer. My mission is to write clean and efficient code, to solve problems on the web and to learn something more.\",\"siteUrl\":\"https://kostasbariotis.com\"}},\"markdownRemark\":{\"html\":\"<p><a href=\\\"https://en.wikipedia.org/wiki/User_story\\\">User stories</a> are a part of every agile driven process that teams usually follow.</p>\\n<p>Often, even a developer can be called to write a story, based on a business requirement, that will eventually be called to develop it. Here's an example:</p>\\n<p><em>As a Developer, I want to be able to filter Blog Posts by Category ID, so I can display a filtered table.</em></p>\\n<p>But one can easily be distracted and write a story based on their understanding of how consumers are using their code. Much like product owners.</p>\\n<p>Before you start, talk to your consumers. See how their are using your code or your REST API. Ask them for feedback and for possible hard times they have with it.</p>\\n<p>Then, write your user stories, based on that.</p>\",\"excerpt\":\"User stories  are a part of every agile driven process that teams usually follow. Often, even a developer can be called to write a story...\",\"frontmatter\":{\"date\":\"October 22, 2015\",\"path\":\"/user-stories/\",\"tags\":null,\"title\":\"User Stories as in User Stories\",\"draft\":null}}},\"pathContext\":{\"prev\":{\"excerpt\":\"While we were moving towards the  Microservices  path at  Goodvidio , we were in the need of keeping in a central place the configuration of our system. Thus, we created the  Configuration Service . The  Configuration Service  exposes a REST API...\",\"html\":\"<p>While we were moving towards the <a href=\\\"http://martinfowler.com/microservices/\\\">Microservices</a> path at <a href=\\\"https://goodvid.io\\\">Goodvidio</a>, we were in the need of keeping in a central place the configuration of our system. Thus, we created the <em>Configuration Service</em>.</p>\\n<p>The <em>Configuration Service</em> exposes a REST API (like all of our services) and provides a place to store configuration variables and values to all of our developers. Each Service of our infrastructure can have a record stored in the <em>Configuration Service</em>. Those records will then be consumed and manipulated by a front end screen, so that even non technical people can alter their values.</p>\\n<p>As a developer that I am working in a feature and I want to make use of the <em>Configuration Service</em>, I must first make sure that there isn't already a record for the Service that I work on and if there isn't I have to create it.</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-none\\\"><code>GET /v1/configurations/ONBOARDING</code></pre>\\n      </div>\\n<p>If the above call return an empty array, I can create it by <code>POST</code>ing a body:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-json\\\"><code><span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token property\\\">\\\"_id\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"ONBOARDING\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token property\\\">\\\"configuration\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token property\\\">\\\"free_trial_duration\\\"</span> <span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"43800\\\"</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n      </div>\\n<p>This way we keep all the configuration of our System in a central place and even the marketing team can decide some day to change the duration of the free trial period.</p>\\n<p>That means fewer deployments, thus faster involvement.</p>\",\"id\":\"/Users/Bariotis/Dev/develop/kostasbariotis.com/src/pages/the-configuration-service/index.md absPath of file >>> MarkdownRemark\",\"timeToRead\":1,\"frontmatter\":{\"date\":\"2015-11-13T18:51:34.000Z\",\"path\":\"/the-configuration-service/\",\"tags\":\"Microservices\",\"title\":\"The Configuration Service\",\"draft\":null}},\"next\":{\"excerpt\":\"With the rise of the upcoming  WebWorkers API  in the horizon, interesting things are emerging. And the one that got me go \\\"whhaaaaat??\\\" is the one that advices you to put all of your business logic inside a WebWorker. Whaaaaat? A WebWorker is a...\",\"html\":\"<p>With the rise of the upcoming <a href=\\\"http://www.w3.org/TR/workers/\\\">WebWorkers API</a> in the horizon, interesting things are emerging. And the one that got me go \\\"whhaaaaat??\\\" is the one that advices you to put all of your business logic inside a WebWorker. Whaaaaat?</p>\\n<p>A WebWorker is a separate thread that runs Javascript but has no access to the DOM or the <code>window</code> object. But it can do complex queries and loops, accessing core <a href=\\\"https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/Functions_and_classes_available_to_workers\\\">functions and APIs</a>, while you are letting the main thread, the UI thread, to handle the UI stuff only.</p>\\n<p>Rendering the DOM is so expensive, specially when it comes to complex interfaces we have nowadays. Not so long ago, the <a href=\\\"https://facebook.github.io/react/docs/reconciliation.html\\\">VirtualDOM</a> introduced which tried to speed up the rendering process by rendering only what actually changed, instead of re-rendering the whole page. But, that's not enough apparently, since even such few changes can't be handle well by low powered devices such as mobiles phones and watches.</p>\\n<p>In order to keep the 60fpm barrier, we are completely freeing the main thread to be able to handle the rendering only and we start WebWorkers to handle our business logic.</p>\\n<p>I found <a href=\\\"http://www.pocketjavascript.com/blog/2015/11/23/introducing-pokedex-org\\\">two</a> <a href=\\\"https://medium.com/@nsisodiya/flux-inside-web-workers-cc51fb463882#.iv69h6ih2\\\">great</a> examples of this concept. Both, they are suggesting keeping the whole app outside the main thread and send there only the patch of the changed DOM to be rendered. The UI thread can then handle only rendering and complex fancy animations.</p>\\n<p>Oh, by the way, Nodejs fans, <a href=\\\"https://github.com/nodejs/node/pull/2133\\\">Workers are coming</a>.</p>\",\"id\":\"/Users/Bariotis/Dev/develop/kostasbariotis.com/src/pages/ui-thread-free/index.md absPath of file >>> MarkdownRemark\",\"timeToRead\":1,\"frontmatter\":{\"date\":\"2015-10-15T00:00:00.000Z\",\"path\":\"/drafts/ui-thread-free/\",\"tags\":null,\"title\":\"UI thread free\",\"draft\":true}}}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---user-stories-14528bc3a460d21f7471.js","module.exports = {\"data\":{\"site\":{\"siteMetadata\":{\"title\":\"Kostas Bariotis' Blog\",\"description\":\"I'm Kostas Bariotis, a web developer, a proud wanderer and a passionate doer. My mission is to write clean and efficient code, to solve problems on the web and to learn something more.\",\"siteUrl\":\"https://kostasbariotis.com\"}},\"markdownRemark\":{\"html\":\"<p><a href=\\\"https://en.wikipedia.org/wiki/User_story\\\">User stories</a> are a part of every agile driven process that teams usually follow.</p>\\n<p>Often, even a developer can be called to write a story, based on a business requirement, that will eventually be called to develop it. Here's an example:</p>\\n<p><em>As a Developer, I want to be able to filter Blog Posts by Category ID, so I can display a filtered table.</em></p>\\n<p>But one can easily be distracted and write a story based on their understanding of how consumers are using their code. Much like product owners.</p>\\n<p>Before you start, talk to your consumers. See how their are using your code or your REST API. Ask them for feedback and for possible hard times they have with it.</p>\\n<p>Then, write your user stories, based on that.</p>\",\"excerpt\":\"User stories  are a part of every agile driven process that teams usually follow. Often, even a developer can be called to write a story...\",\"frontmatter\":{\"date\":\"October 22, 2015\",\"path\":\"/user-stories/\",\"tags\":null,\"title\":\"User Stories as in User Stories\",\"draft\":null}}},\"pathContext\":{\"prev\":{\"excerpt\":\"While we were moving towards the  Microservices  path at  Goodvidio , we were in the need of keeping in a central place the configuration of our system. Thus, we created the  Configuration Service . The  Configuration Service  exposes a REST API...\",\"html\":\"<p>While we were moving towards the <a href=\\\"http://martinfowler.com/microservices/\\\">Microservices</a> path at <a href=\\\"https://goodvid.io\\\">Goodvidio</a>, we were in the need of keeping in a central place the configuration of our system. Thus, we created the <em>Configuration Service</em>.</p>\\n<p>The <em>Configuration Service</em> exposes a REST API (like all of our services) and provides a place to store configuration variables and values to all of our developers. Each Service of our infrastructure can have a record stored in the <em>Configuration Service</em>. Those records will then be consumed and manipulated by a front end screen, so that even non technical people can alter their values.</p>\\n<p>As a developer that I am working in a feature and I want to make use of the <em>Configuration Service</em>, I must first make sure that there isn't already a record for the Service that I work on and if there isn't I have to create it.</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-none\\\"><code>GET /v1/configurations/ONBOARDING</code></pre>\\n      </div>\\n<p>If the above call return an empty array, I can create it by <code>POST</code>ing a body:</p>\\n<div class=\\\"gatsby-highlight\\\">\\n      <pre class=\\\"language-json\\\"><code><span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token property\\\">\\\"_id\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"ONBOARDING\\\"</span><span class=\\\"token punctuation\\\">,</span>\\n  <span class=\\\"token property\\\">\\\"configuration\\\"</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">{</span>\\n    <span class=\\\"token property\\\">\\\"free_trial_duration\\\"</span> <span class=\\\"token operator\\\">:</span> <span class=\\\"token string\\\">\\\"43800\\\"</span>\\n  <span class=\\\"token punctuation\\\">}</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n</code></pre>\\n      </div>\\n<p>This way we keep all the configuration of our System in a central place and even the marketing team can decide some day to change the duration of the free trial period.</p>\\n<p>That means fewer deployments, thus faster involvement.</p>\",\"id\":\"/Users/Bariotis/Dev/develop/kostasbariotis.com/src/pages/the-configuration-service/index.md absPath of file >>> MarkdownRemark\",\"timeToRead\":1,\"frontmatter\":{\"date\":\"2015-11-13T18:51:34.000Z\",\"path\":\"/the-configuration-service/\",\"tags\":\"Microservices\",\"title\":\"The Configuration Service\",\"draft\":null}},\"next\":{\"excerpt\":\"With the rise of the upcoming  WebWorkers API  in the horizon, interesting things are emerging. And the one that got me go \\\"whhaaaaat??\\\" is the one that advices you to put all of your business logic inside a WebWorker. Whaaaaat? A WebWorker is a...\",\"html\":\"<p>With the rise of the upcoming <a href=\\\"http://www.w3.org/TR/workers/\\\">WebWorkers API</a> in the horizon, interesting things are emerging. And the one that got me go \\\"whhaaaaat??\\\" is the one that advices you to put all of your business logic inside a WebWorker. Whaaaaat?</p>\\n<p>A WebWorker is a separate thread that runs Javascript but has no access to the DOM or the <code>window</code> object. But it can do complex queries and loops, accessing core <a href=\\\"https://developer.mozilla.org/en-US/docs/Web/API/Web_Workers_API/Functions_and_classes_available_to_workers\\\">functions and APIs</a>, while you are letting the main thread, the UI thread, to handle the UI stuff only.</p>\\n<p>Rendering the DOM is so expensive, specially when it comes to complex interfaces we have nowadays. Not so long ago, the <a href=\\\"https://facebook.github.io/react/docs/reconciliation.html\\\">VirtualDOM</a> introduced which tried to speed up the rendering process by rendering only what actually changed, instead of re-rendering the whole page. But, that's not enough apparently, since even such few changes can't be handle well by low powered devices such as mobiles phones and watches.</p>\\n<p>In order to keep the 60fpm barrier, we are completely freeing the main thread to be able to handle the rendering only and we start WebWorkers to handle our business logic.</p>\\n<p>I found <a href=\\\"http://www.pocketjavascript.com/blog/2015/11/23/introducing-pokedex-org\\\">two</a> <a href=\\\"https://medium.com/@nsisodiya/flux-inside-web-workers-cc51fb463882#.iv69h6ih2\\\">great</a> examples of this concept. Both, they are suggesting keeping the whole app outside the main thread and send there only the patch of the changed DOM to be rendered. The UI thread can then handle only rendering and complex fancy animations.</p>\\n<p>Oh, by the way, Nodejs fans, <a href=\\\"https://github.com/nodejs/node/pull/2133\\\">Workers are coming</a>.</p>\",\"id\":\"/Users/Bariotis/Dev/develop/kostasbariotis.com/src/pages/ui-thread-free/index.md absPath of file >>> MarkdownRemark\",\"timeToRead\":1,\"frontmatter\":{\"date\":\"2015-10-15T00:00:00.000Z\",\"path\":\"/drafts/ui-thread-free/\",\"tags\":null,\"title\":\"UI thread free\",\"draft\":true}}}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/user-stories.json\n// module id = ./node_modules/json-loader/index.js!./.cache/json/user-stories.json\n// module chunks = 103852512379744"],"sourceRoot":""}